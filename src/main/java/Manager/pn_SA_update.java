/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Manager;

import Class_File.FILE_IO;
import Class_File.Maintenance_Assignment;
import Class_File.ManagerClass;
import java.io.IOException;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author junyong is DaShuaiGe
 */
public class pn_SA_update extends javax.swing.JPanel {
    private ManagerMainPage managerMainPage;
    private String ManagerID;
    protected List<Maintenance_Assignment> filteredAssignments = new ArrayList<>(); 
    protected DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm");
    /**
     * Creates new form pn_SA_update
     */
    public pn_SA_update(ManagerMainPage managerMainPage, String managerID) {
        this.managerMainPage = managerMainPage;
        this.ManagerID = managerID;
        initComponents();
        DefaultTableModel model_Feedback = (DefaultTableModel) tbl_HM_hallMaintenance.getModel();
        model_Feedback.setRowCount(0); // 清空现有行
        method();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pn_SA_update = new javax.swing.JPanel();
        lbl_Title3 = new javax.swing.JLabel();
        btn_USA_cancel = new javax.swing.JButton();
        btn_USA_update = new javax.swing.JButton();
        lbl_SA_content18 = new javax.swing.JLabel();
        cbo_HM_maintenanceStatus = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_HM_hallMaintenance = new javax.swing.JTable();
        cbo_HM_UpdateStatus = new javax.swing.JComboBox<>();

        lbl_Title3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbl_Title3.setText("Update Scheduler Assignment");

        btn_USA_cancel.setText("Cancel");
        btn_USA_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_USA_cancelActionPerformed(evt);
            }
        });

        btn_USA_update.setText("Update");
        btn_USA_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_USA_updateActionPerformed(evt);
            }
        });

        lbl_SA_content18.setText("View Maintenance Status :");

        cbo_HM_maintenanceStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "In Progress", "Done", "Closed", "Cancelled" }));
        cbo_HM_maintenanceStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_HM_maintenanceStatusActionPerformed(evt);
            }
        });

        tbl_HM_hallMaintenance.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Assignment ID", "Issue ID", "Hall ID", "Scheduler ID", "Issue Date Time", "Status", "Remark"
            }
        ));
        jScrollPane2.setViewportView(tbl_HM_hallMaintenance);

        cbo_HM_UpdateStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "In Progress", "Done", "Closed", "Cancelled" }));
        cbo_HM_UpdateStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_HM_UpdateStatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pn_SA_updateLayout = new javax.swing.GroupLayout(pn_SA_update);
        pn_SA_update.setLayout(pn_SA_updateLayout);
        pn_SA_updateLayout.setHorizontalGroup(
            pn_SA_updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_SA_updateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_SA_updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn_SA_updateLayout.createSequentialGroup()
                        .addComponent(lbl_Title3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pn_SA_updateLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 665, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(pn_SA_updateLayout.createSequentialGroup()
                        .addComponent(lbl_SA_content18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbo_HM_maintenanceStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbo_HM_UpdateStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_USA_update)
                        .addGap(17, 17, 17))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_SA_updateLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_USA_cancel)
                .addContainerGap())
        );
        pn_SA_updateLayout.setVerticalGroup(
            pn_SA_updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_SA_updateLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_Title3)
                .addGap(18, 18, 18)
                .addGroup(pn_SA_updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_SA_content18)
                    .addComponent(cbo_HM_maintenanceStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_USA_update)
                    .addComponent(cbo_HM_UpdateStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(btn_USA_cancel)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 677, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pn_SA_update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 406, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pn_SA_update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_USA_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_USA_cancelActionPerformed
        try {
            managerMainPage.switchToPage(new pn_SA_home(managerMainPage, ManagerID));
        } catch (Exception ex) {
            Logger.getLogger(pn_SA_assign.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_USA_cancelActionPerformed

    private void cbo_HM_maintenanceStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_HM_maintenanceStatusActionPerformed
        String selectedFilter = cbo_HM_maintenanceStatus.getSelectedItem().toString();
        List<Maintenance_Assignment> filteredData = new ArrayList<>();
        DefaultTableModel model_Feedback = (DefaultTableModel) tbl_HM_hallMaintenance.getModel();
        model_Feedback.setRowCount(0); // Clear the table
        
        for (Maintenance_Assignment row : filteredAssignments) {
            System.out.println(row);
            if (row.getStatus().equalsIgnoreCase(selectedFilter)) {
                System.out.println(row);
                filteredData.add(row); // Add matching rows to the filtered list
            }
        }
        
        for (Maintenance_Assignment Assignment : filteredData) {
            Object[] rowData = {
                    Assignment.getAssignmentID(),
                    Assignment.getIssue().getFeedback_ID(),
                    Assignment.getHall().getHall_ID(),   
                    Assignment.getScheduler().getUserID(),
                    Assignment.getAssignDateTime().format(formatter), // Assignment DateTime
                    Assignment.getStatus(),
                    Assignment.getRemark()
                };
                model_Feedback.addRow(rowData);
        }
    }//GEN-LAST:event_cbo_HM_maintenanceStatusActionPerformed

    private void cbo_HM_UpdateStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_HM_UpdateStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbo_HM_UpdateStatusActionPerformed

    private void btn_USA_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_USA_updateActionPerformed
        String selectedFilter = cbo_HM_UpdateStatus.getSelectedItem().toString();
        int selectedRow = tbl_HM_hallMaintenance.getSelectedRow();
        
        DefaultTableModel model_Feedback = (DefaultTableModel) tbl_HM_hallMaintenance.getModel();

        
        if (selectedRow != -1) {

            String data1 = (String) tbl_HM_hallMaintenance.getValueAt(selectedRow, 0); 
            model_Feedback.setRowCount(0); // 清空现有行
            try {
                ManagerClass.updateAssignmentStatus(data1, selectedFilter);
                
                model_Feedback.setRowCount(0); // 清空现有行
                
                method();
                JOptionPane.showMessageDialog(null, "The row is been modified");
            } catch (Exception ex) {
                Logger.getLogger(pn_SA_update.class.getName()).log(Level.SEVERE, null, ex);
            }
            

        } else {
            // 弹出警告，提醒用户选择一行
            JOptionPane.showMessageDialog(null, "Please select a row to assign.");
        }
    }//GEN-LAST:event_btn_USA_updateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_USA_cancel;
    private javax.swing.JButton btn_USA_update;
    private javax.swing.JComboBox<String> cbo_HM_UpdateStatus;
    private javax.swing.JComboBox<String> cbo_HM_maintenanceStatus;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_SA_content18;
    private javax.swing.JLabel lbl_Title3;
    private javax.swing.JPanel pn_SA_update;
    private javax.swing.JTable tbl_HM_hallMaintenance;
    // End of variables declaration//GEN-END:variables
    public void method(){
        FILE_IO F = new FILE_IO();
        List<Maintenance_Assignment> allAssignments = null;
        
        try {
            allAssignments = F.getAllIAssignment();
        } catch (Exception ex) {
            Logger.getLogger(pn_SA_update.class.getName()).log(Level.SEVERE, null, ex);
        }

        filteredAssignments.clear();

        // Filter assignments based on the provided ManagerID
        for (Maintenance_Assignment assignment : allAssignments) {
            if (assignment.getManager().getUserID().equals(ManagerID)) {
                filteredAssignments.add(assignment); // Add matching assignments to the filtered list
            }
        }

        // Clear the table before displaying new data
        DefaultTableModel model_Feedback = (DefaultTableModel) tbl_HM_hallMaintenance.getModel();
        model_Feedback.setRowCount(0); // Clear the table

        // Add filtered assignments to the table
        for (Maintenance_Assignment assignment : filteredAssignments) {
            Object[] rowData = {
                assignment.getAssignmentID(),
                assignment.getIssue().getFeedback_ID(), 
                assignment.getHall().getHall_ID(),   
                assignment.getScheduler().getUserID(),
                assignment.getAssignDateTime().format(formatter), // Assignment DateTime
                assignment.getStatus(),
                assignment.getRemark()
            };

            model_Feedback.addRow(rowData); // Populate the table with filtered data
        }
    }

}


